version: '2'

services:

  # Elasticseach microservice definition
  elasticsearch:
    # Directory containing the Dockerfile.
    build: elasticsearch/
    # Override default configuration directory
    command: -Epath.conf=/etc/elasticsearch/
    # Map ports between the host machine and the Docker instance:
    # Port 9200 - access to Elasticsearch API
    # Port 9300 - cluster communication
    ports:
      - "9200:9200"
      - "9300:9300"
    # Elasticseach requires lots of heap memory for high performance.
    # The underlying library is Lucene, and the library's data is stored
    # as a set of immutable files, cached by the Linux kernel in the
    # unused RAM buffers. Let Elasticseach use 50% of RAM for its heap,
    # leave the rest for Lucene to increase speed; or: ES_HEAP_SIZE=1g
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
    # This container is on the same Docker network as the others so they
    # can communicate between each other.
    networks:
      - delknet
    # Share the data and configuration directories/files using volumes.
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
      - ./elasticsearch/elasticsearch.yml:/etc/elasticsearch/elasticsearch.yml

  # Logstash microservice definition
  logstash:
    # Directory containing the Dockerfile.
    build: logstash/
    # Override the default configuration directory
    command: -f /etc/logstash/conf.d/
    # The configuration files are stored in a mapped volume
    volumes:
      - ./logstash/conf:/etc/logstash/conf.d
    # Map this port so we can send the rsyslog from host to Logstash
    ports:
      - "5000:5000"
    # Put this container on the same Docker network as the others
    # so they can communicate between each other
    networks:
      - delknet
  # Define the Kibana service
  kibana:
    build: kibana/
    # Volume for Kibana's configuration file
    volumes:
      - ./kibana/config/:/opt/kibana/config/
    # Ports for getting to Kibana (open http://localhost:5610 in your browser to see it)
    ports:
      - "5601:5601"
    # Put this container on the same Docker network as the others
    # so they can communicate between each other
    networks:
      - delknet

# One common network for our services to communicate together well
networks:
  delknet:
    driver: bridge
